---
import "../../styles/pages/home/about.css";

const skillCategories = {
    "Frontend": [
        "HTML", "CSS", "JavaScript", "TypeScript", "React", "Next.js", "Styled Components",
        "Tailwind", "Svelte", "Astro.js", "Qwik.js", "Remix.js", "Solid.js", "React Router", "Redux", "Zustand", "TanStack Query", "SWR", "Framer Motion", "Three.js"
    ],
    "Backend": [
        "Node.js", "Bun.js", "Nest.js", "Python", "GraphQL", "WebSockets",
        "JWT/OAuth2", "REST APIs", "Microservices", "Serverless", "PrismaORM", "DrizzleORM", "RabbitMQ", "Kafka", "ExpressJS", "Fastify", "HonoJS", "FastAPI", "ElysiaJS", "OWASP"
    ],
    "Database": [
        "PostgreSQL", "MySQL", "Sqlite", "MongoDB", "Chroma", "MeiliSearch", "Redis", "Dragonfly"
    ],
    "Mobile": [
        "Dart", "Flutter", "React Native"
    ],
    "DevOps": [
        "Docker", "Linux", "Nginx", "Caddy", "Github", "Gitlab", "CI/CD", "Jenkins",
        "AWS", "GCP", "DO", "Vercel", "Netlify", "Railway", "Aapanel", "Cpanel", "Coolify", "Turso", "Cloudflare Workers", "Bash"
    ],
    "AI/ML": [
        "Hugging Face", "RAG Pipelines", "Langchain", "LlamaIndex", "OpenAI", "Vertex AI", "Vercel AI", "Ollama"
    ],
    "CMS": [
        "WordPress", "OpenCart", "Ghost", "Strapi", "Sanity", "TinyCMS", "KeyStatic", "Payload", "XenForo", "vBulletin", "phpBB", "DLE"
    ]
};

const services = [
    "تطوير تطبيقات الويب",
    "تطوير تطبيقات الهواتف المحمولة",
    "بناء APIs و المايكروسيرفس",
    "حلول الذكاء الاصطناعي",
    "استشارات تقنية",
    "تحسين الأداء والأمان",
    "تدريب وتوجيه الفرق التقنية"
];

// Limit services displayed initially
const MAX_SERVICES_DISPLAY = 5;

// Helper function to get limited services
const getLimitedServices = () => {
    if (services.length <= MAX_SERVICES_DISPLAY) {
        return {visible: services, hidden: []};
    }
    return {
        visible: services.slice(0, MAX_SERVICES_DISPLAY),
        hidden: services.slice(MAX_SERVICES_DISPLAY)
    };
};

const limitedServices = getLimitedServices();
---

<section id="about" class="about-section">
    <div class="section-container">
        <div class="section-grid">
            <header class="section-header">
                <div class="section-header-sticky">
                    <h2 class="section-title">نبذة عني</h2>
                    <div class="section-divider"></div>
                </div>
            </header>

            <div class="about-content">
                <div class="about-text">
                    <p>
                        مهندس برمجيات متخصص في بناء تطبيقات الويب الحديثة. أعمل مع الأفراد والشركات
                        الناشئة لتحويل أفكارهم إلى منتجات رقمية ناجحة.
                    </p>
                    <p>
                        خبرتي تشمل تطوير الواجهات الأمامية والخلفية، تصميم قواعد البيانات،
                        وبناء أنظمة قابلة للتوسع مع التركيز على الأمان والأداء.
                    </p>
                </div>

                <div class="about-details">
                    <div class="about-skills">
                        <h3 class="details-title">التقنيات</h3>
                        <div class="skills-categories">
                            {Object.entries(skillCategories).map(([category, skills]) => (
                                    <details class="skill-category" data-category={category.toLowerCase()}>
                                        <summary class="category-summary">
                                            <h4 class="category-title">{category}</h4>
                                            <span class="category-count">({skills.length})</span>
                                        </summary>
                                        <div class="skills-list">
                                            {skills.map((skill) => (
                                                    <span class="skill-item">{skill}</span>
                                            ))}
                                        </div>
                                    </details>
                            ))}
                        </div>
                    </div>

                    <div class="about-services">
                        <h3 class="details-title">الخدمات</h3>
                        <div class="services-list">
                            {limitedServices.visible.map((service) => (
                                    <div class="service-item">{service}</div>
                            ))}
                            {limitedServices.hidden.length > 0 && (
                                    <>
                                        <button
                                                class="services-expand-btn"
                                                data-hidden-count={limitedServices.hidden.length}
                                                aria-label={`عرض ${limitedServices.hidden.length} خدمات إضافية`}
                                        >
                                            عرض المزيد ({limitedServices.hidden.length})
                                        </button>
                                        <div class="services-hidden" style="display: none;">
                                            {limitedServices.hidden.map((service) => (
                                                    <div class="service-item">{service}</div>
                                            ))}
                                        </div>
                                    </>
                            )}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    // Progressive enhancement for services expansion only
    document.addEventListener('DOMContentLoaded', () => {
        // Services expansion
        const servicesExpandBtn: HTMLElement | null = document.querySelector('.services-expand-btn');
        if (servicesExpandBtn) {
            servicesExpandBtn.addEventListener('click', (e) => {
                e.preventDefault();
                const servicesList = servicesExpandBtn.closest('.services-list');
                const hiddenServices: HTMLElement | null | undefined = servicesList?.querySelector('.services-hidden');

                if (hiddenServices) {
                    const isHidden = hiddenServices.style.display === 'none';
                    if (isHidden) {
                        hiddenServices.style.display = 'flex';
                        hiddenServices.style.flexDirection = 'column';
                        hiddenServices.style.gap = '0.5rem';
                    } else {
                        hiddenServices.style.display = 'none';
                    }
                    servicesExpandBtn.textContent = isHidden
                        ? 'عرض أقل'
                        : `عرض المزيد (${servicesExpandBtn.dataset.hiddenCount})`;
                    servicesExpandBtn.setAttribute('aria-expanded', isHidden.toString());
                }
            });
        }
    });
</script>